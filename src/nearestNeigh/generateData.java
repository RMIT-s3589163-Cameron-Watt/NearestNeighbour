package nearestNeigh;

import java.io.File;
import java.io.PrintWriter;
import java.io.FileNotFoundException;

/* This class aims at generating a number of records in the form of 
 *       id10 restaurant -36.4840417904 144.608559957
 * Then outputting this data to a text file
 * 
 * WARNING This class uses formatted output, so the values of data generated must be selected
 * 			carefully, else change the formatting values to ensure the numbers are printed
 * 			with a reasonable number of decimal places 
 * @author Watt, Cameron
 */
public class generateData {
    // identifier
    public String id = null;
    // category  -  Possible categories - RESTAURANT, EDUCATION, HOSPITAL
    public Category cat;
    // latitude or x-coordinate
    public double lat = 0;
    // longitude or y-coordinate
    public double lon = 0;
	
    // Declare a output stream variable
    PrintWriter outputStream = null;    
    
    // Class Constructor
    public generateData( int noOfRecords, 
    		double minLat, double maxLat, 
    		double minLon, double maxLon,
    		String fileName ) {

    // Open the file to write to
    try {
    	outputStream = new PrintWriter(new File(fileName));
    }  
    catch (FileNotFoundException e) {
    	System.out.println("Error creating file " + fileName);
    }
    	
    int random = 0;		// Used to determine a category
    
		for ( int i = 0; i < noOfRecords; i++ ) {
			// generate id
			id = "id" + i;
			
			// generate Category
			random = (int) Math.floor(Math.random() * (3));
			switch ( random ) {
				case 0: {
					cat = Point.parseCat("RESTAURANT");
					break;
				}
				case 1: {
					cat = Point.parseCat("EDUCATION");
					break;
				}
				case 2: {
					cat = Point.parseCat("HOSPITAL");
					break;
				}
			}
			
			// generate lat
			lat = generateRandomDouble( minLat, maxLat );
			
			// generate lon
			lon = generateRandomDouble( minLon, maxLon );
			
			// Output the data to the textfile using formatted output
			outputStream.printf( id + " " + cat + " %10.6f %10.6f %n", lat, lon);
		}
		
		// Close the outputStream and save the file
		outputStream.close();
    }

    /* The following code is from
     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random
     * This example returns a random number between the specified values. The returned value is no
     * lower than (and may possibly equal) min, and is less than (but not equal to) max.
     */ 
	private double generateRandomDouble( double min, double max ) {
		/* As this function doesn't include the max function by default, we need to increase
		 * the max value to ensure that it is included 
		 */
		max += 1;
		//return Math.floor(Math.random() * (max - min)) + min;
		return Math.random() * (max - min) + min;
	}
}

// Used to run the data generator 
class starter {
	public static void main(String[] args) {
		// Number of records to be generated
		int largeNoOfRecords = 1000000;
		int mediumNoOfRecords = 10000;
		int smallNoOfRecords = 100;
		
		// Set the min and max values to be generated by the generator
		double minLat = 130.000000;
		double maxLat = 140.000000;
		double minLon = 150.000000;
		double maxLon = 160.000000;
		
		generateData startProgramL = new generateData( largeNoOfRecords, minLat, maxLat, minLon, maxLon,
				"large.txt" );
		generateData startProgramM = new generateData( mediumNoOfRecords, minLat, maxLat, minLon, maxLon,
				"medium.txt" );
		generateData startProgramS = new generateData( smallNoOfRecords, minLat, maxLat, minLon, maxLon,
				"small.txt" );
	}
}